## FFMPEG

# YYMMDD@HH_MM_SS output filename string

-o %USERPROFILE%\Desktop\%Date:~-2,2%%Date:~4,2%%Date:~7,2%@%time:~0,2%_%time:~3,2%_%time:~6,2%.webm"

# Lossless conversion

ffmpeg -i input.avi -c:v libx264 -preset veryslow -qp 0 output.mp4

#Convert file from url and limit filesize without reencoding

ffmpeg -i https://giant.gfycat.com/file.mp4 -fs 12M -c copy C:\path\to\output.mp4

#Convert file from url, downscale, limit filesize with reencoding

ffmpeg -i https://giant.gfycat.com/file.mp4 -vf scale=1280:-2 -fs 12M -vcodec libx264 C:\path\to\output.mp4

# Remove audio from video
	ffmpeg -i input.mkv -vcodec copy -an output.mkv

# Convert audio track to mp3
	ffmpeg -i input.mp4 -b:a 320K -vn output.mp3

# Convert mp3+image to mp4
	ffmpeg -loop 1 -i "E:\Path\To\image.jpg" -i "E:\Path\To\input.mp3" -c:v libx264 -c:a aac -strict experimental -shortest "C:\Path\To\output.mp4"

# Copy video+audio codecs into new container
	ffmpeg -i input.mp4 -vcodec copy -acodec copy output.mkv

# Cut video by time
	ffmpeg -i input.mp4 -ss 00:01:00 -to 00:02:00 output.mp4

# Convert all the mkv files in current directory, loop
	for i in *mkv; do ffmpeg -i $i -vcodec copy -acodec copy $i.mp4; done

# Cut video in 10 second intervals
	ffmpeg -i "F:\input.avi" -c:a libvorbis -f segment -segment_time 10 -c:v libvpx -b:v 3276k -vf scale=1080:-1 -reset_timestamps 1 -map 0 "F:\output%d.webm"

# Concoct multiple files into 1
	ffmpeg -i "concat:input1.mpg|input2.mpg|input3.mpg" -c copy output.mpg

# Convert all images in folder to video
	ffmpeg -f image2 -i image%d.jpg video.avi

# Remove 2nd audio track
	-strict experimental -f matroska -map_chapters -1 -map 0:0 -map 0:1 -sn -c:a:0 copy -c:v:0 copy -y

# Convert file to mp3
120-130kbps
	ffmpeg -i "C:\path\to\file.m4a" -c:a libmp3lame -v 5 "C:\path\to\file.mp3"
320kbps
	ffmpeg -i "C:\path\to\file.m4a" -c:a libmp3lame -b 320 "C:\path\to\file.mp3"

# Convert part of a file to mp4 with 125kbps aac audio
	ffmpeg -i "C:\path\to\input.ts" -ss 00:00:58 -to 00:01:14 -vcodec libx264 -acodec aac -b:a 125K -preset slow "C:\path\to\output.mp4"

#Merge audio+video files:
	ffmpeg -i audio.wav -i video.mp4 -acodec copy -vcodec copy -f mkv output.mkv

# Join multiple video files from list without re-encoding
1. Create a text file like so

file 'C:\path\to\input1.mp4'
file 'C:\path\to\input2.mp4'
file 'C:\path\to\input3.mp4'

2. ffmpeg -f concat -safe 0 -i "C:\path\to\list.txt" -c copy "C:\path\to\output.mp4"

## YOUTUBE-DL

# To stop a stream in progress, press Q in the terminal window

# Download multiple urls at once

youtube-dl [options] [URL1] [URL2] [URL3]

# Batch download URLs from list

youtube-dl --batch-file='/path/to/list.txt'

# To stop a stream in progress, press Q in the terminal window

[Linux only]

# Downloading a channel's entire video library as .mp3
	youtube-dl --ignore-config --extract-audio --audio-format mp3 https://www.youtube.com/channel/UCE_KjzyDk6upIzIlcBMVgzQ/videos --download-archive '~/.config/youtube-dl/downloaded.txt' -o '~/files/youtube/%(uploader)s - %(title)s.%(ext)s'

# Automate with cron

Every day @noon
	@daily youtube-dl --ignore-config --extract-audio --audio-format mp3 https://www.youtube.com/channel/UCE_KjzyDk6upIzIlcBMVgzQ/videos --download-archive '~/.config/youtube-dl/downloaded.txt' -o '~/files/youtube/%(uploader)s - %(title)s.%(ext)s'
